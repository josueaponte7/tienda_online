parameters:
    rabbitmq.host: '%env(RABBITMQ_HOST)%'
    rabbitmq.port: '%env(RABBITMQ_PORT)%'
    rabbitmq.user: '%env(RABBITMQ_USER)%'
    rabbitmq.password: '%env(RABBITMQ_PASSWORD)%'
    rabbitmq.vhost: '%env(RABBITMQ_VHOST)%'

services:

    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # Configuración automática de servicios en `src/`
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Registro de los repositorios sin argumentos manuales
    App\Repository\UserRepositoryMysql:
        public: true
        arguments:
            $entityManager: '@doctrine.orm.mysql_entity_manager_entity_manager'
            $logger: '@logger'# Puede ser necesario si deseas depurar o verificar manualmente
    App\Repository\UserRepositoryPostgres:
        public: true
        arguments:
            $entityManager: '@doctrine.orm.postgres_entity_manager_entity_manager'
            $logger: '@logger'

    # Configuración del servicio UserService
    App\Service\UserService:
        arguments:
            $userRepositoryMysql: '@App\Repository\UserRepositoryMysql'
            $userRepositoryPostgres: '@App\Repository\UserRepositoryPostgres'

    # Alias para la interfaz del repositorio
    App\Repository\UserRepositoryInterface:
        alias: App\Repository\UserRepositoryPostgres

    Redis:
        class: Redis
        factory: ['App\Factory\RedisFactory', 'create']
        arguments:
            - '%env(REDIS_URL)%'

    App\Service\RabbitMQService:
        arguments:
            $host: '%rabbitmq.host%'
            $port: '%rabbitmq.port%'
            $user: '%rabbitmq.user%'
            $password: '%rabbitmq.password%'

    Elastic\Elasticsearch\Client:
        factory: ['Elastic\Elasticsearch\ClientBuilder', 'fromConfig']
        arguments:
            - hosts: ['http://localhost:9200']
